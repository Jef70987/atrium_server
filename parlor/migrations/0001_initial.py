# Generated by Django 5.2.5 on 2025-09-10 10:04

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_code', models.CharField(max_length=20, unique=True)),
                ('client_name', models.CharField(blank=True, max_length=255, null=True)),
                ('client_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('client_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('client_address', models.TextField(blank=True, null=True)),
                ('preferred_date', models.DateField(default=django.utils.timezone.now)),
                ('preferred_time', models.TimeField(default=django.utils.timezone.now)),
                ('delivery_option', models.CharField(choices=[('delivery', 'Delivery'), ('pickup', 'Pick-up')], default='pickup', max_length=10)),
                ('payment_method', models.CharField(choices=[('mpesa', 'M-Pesa'), ('card', 'Credit Card'), ('cash', 'Cash on Delivery')], default='mpesa', max_length=10)),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('terms_accepted', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('processing', 'Processing'), ('confirmed', 'Confirmed'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled')], default='processing', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('image', models.ImageField(upload_to='product_img/')),
                ('stock', models.PositiveIntegerField(default=0)),
                ('discount', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('name', models.CharField(max_length=100)),
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=5)),
                ('comment', models.TextField()),
                ('is_approved', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Subscriptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Subscription_type', models.CharField(max_length=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('duration_days', models.IntegerField(default=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('CLIENT', 'client'), ('STAFF', 'staff')], default='CLIENT', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BookingItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='parlor.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parlor.product')),
            ],
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('name', models.CharField(max_length=100)),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='parlor.review')),
            ],
            options={
                'verbose_name_plural': 'Replies',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Spa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug_name', models.CharField(max_length=200, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('spa_name', models.CharField(max_length=20)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='spa_logos/')),
                ('payment_status', models.CharField(choices=[('active', 'Active'), ('dormant', 'dormant'), ('inactive', 'Inactive')], default='active', max_length=10)),
                ('level', models.CharField(choices=[('level 0', 'Level 0'), ('level 1', 'Level 1')], default='Level 0', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='spa', to=settings.AUTH_USER_MODEL)),
                ('Subscription_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parlor.subscriptions')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('service_img', models.ImageField(upload_to='service_img/')),
                ('is_active', models.BooleanField(default=True)),
                ('spa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='parlor.spa')),
            ],
        ),
        migrations.AddField(
            model_name='review',
            name='spa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='parlor.spa'),
        ),
        migrations.AddField(
            model_name='product',
            name='spa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='parlor.spa'),
        ),
        migrations.CreateModel(
            name='PaymentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('reference_code', models.CharField(max_length=100, unique=True)),
                ('spa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='parlor.spa')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='spa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='parlor.spa'),
        ),
        migrations.CreateModel(
            name='GalleryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='gallery/')),
                ('caption', models.CharField(blank=True, max_length=255, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('spa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery', to='parlor.spa')),
            ],
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('time', models.CharField(max_length=40)),
                ('spa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact', to='parlor.spa')),
            ],
        ),
        migrations.CreateModel(
            name='SpaDashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('venture_date', models.DateField()),
                ('dashboard_img1', models.ImageField(upload_to='dashboard_img1/')),
                ('dashboard_img2', models.ImageField(upload_to='dashboard_img2/')),
                ('dashboard_img3', models.ImageField(upload_to='dashboard_img3/')),
                ('dashboard_img4', models.ImageField(upload_to='dashboard_img4/')),
                ('dashboard_img5', models.ImageField(upload_to='dashboard_img5/')),
                ('dashboard_img6', models.ImageField(upload_to='dashboard_img6/')),
                ('dashboard_img7', models.ImageField(upload_to='dashboard_img7/')),
                ('dashboard_img8', models.ImageField(upload_to='dashboard_img8/')),
                ('spa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parlor.spa')),
            ],
        ),
        migrations.CreateModel(
            name='SpaHome_offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer_title', models.CharField(max_length=20)),
                ('offer_message', models.TextField()),
                ('offer_valid', models.DateField()),
                ('spa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parlor.spa')),
            ],
        ),
        migrations.CreateModel(
            name='SpaHome_welcome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_img', models.ImageField(upload_to='home_img/')),
                ('welcome_content', models.TextField()),
                ('slogan', models.TextField(default='Your Oasis Of Relaxation')),
                ('spa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parlor.spa')),
            ],
        ),
        migrations.CreateModel(
            name='spaNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification', models.TextField()),
                ('spa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification', to='parlor.spa')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('staff_id', models.CharField(max_length=20, unique=True)),
                ('specialization', models.CharField(blank=True, max_length=100)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='staff_profile/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('spa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_members', to='parlor.spa')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=100)),
                ('customer_email', models.EmailField(max_length=254)),
                ('customer_phone', models.CharField(blank=True, max_length=15)),
                ('customer_address', models.TextField(blank=True)),
                ('booking_date', models.DateField()),
                ('booking_time', models.TimeField()),
                ('notes', models.TextField(blank=True)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('clients', models.IntegerField(default=1)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('booking_reference', models.CharField(max_length=20, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('services', models.ManyToManyField(to='parlor.service')),
                ('spa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='parlor.spa')),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='parlor.staff')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(auto_now_add=True)),
                ('End_date', models.DateField()),
                ('Amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reference_code', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('price', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parlor.subscriptions')),
                ('spa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parlor.spa')),
            ],
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme_code', models.CharField(default='red', max_length=7)),
                ('spa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spa_theme', to='parlor.spa')),
            ],
        ),
        migrations.CreateModel(
            name='OperatingHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('open_time', models.TimeField()),
                ('close_time', models.TimeField()),
                ('is_closed', models.BooleanField(default=False)),
                ('current_status', models.CharField(choices=[('open', 'open'), ('closed', 'closed')], default='open', max_length=20)),
                ('spa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operating_hours', to='parlor.spa')),
            ],
            options={
                'ordering': ['day'],
                'unique_together': {('spa', 'day')},
            },
        ),
    ]
